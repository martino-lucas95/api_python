apiVersion: v1
kind: Namespace
metadata:
  name: api-notes
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-notes-config
  namespace: api-notes
data:
  NOTES_PATH: "/data/notes.json"
---
# Blue Deployment (Stable - v2.0.0)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-notes-blue
  namespace: api-notes
  labels:
    version: blue
    environment: stable
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-notes
      version: blue
  template:
    metadata:
      labels:
        app: api-notes
        version: blue
        environment: stable
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: api-notes
          image: notes-api:v2.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5001
          env:
            - name: NOTES_PATH
              valueFrom:
                configMapKeyRef:
                  name: api-notes-config
                  key: NOTES_PATH
            - name: DEPLOYMENT_ENV
              value: "blue"
          volumeMounts:
            - name: notes-storage
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5001
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5001
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: notes-storage
          emptyDir: {}
---
# Green Deployment (New - v3.0.0)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-notes-green
  namespace: api-notes
  labels:
    version: green
    environment: staging
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-notes
      version: green
  template:
    metadata:
      labels:
        app: api-notes
        version: green
        environment: staging
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: api-notes
          image: notes-api:v3.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5001
          env:
            - name: NOTES_PATH
              valueFrom:
                configMapKeyRef:
                  name: api-notes-config
                  key: NOTES_PATH
            - name: DEPLOYMENT_ENV
              value: "green"
          volumeMounts:
            - name: notes-storage
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5001
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5001
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: notes-storage
          emptyDir: {}
---
# Production Service (Initially pointing to Blue)
apiVersion: v1
kind: Service
metadata:
  name: api-notes
  namespace: api-notes
  labels:
    traffic: production
spec:
  selector:
    app: api-notes
    version: blue  # Production traffic initially goes to Blue
  ports:
    - name: http
      port: 80
      targetPort: 5001
  type: ClusterIP
---
# Blue Service (Direct access to Blue environment)
apiVersion: v1
kind: Service
metadata:
  name: api-notes-blue
  namespace: api-notes
  labels:
    traffic: blue
spec:
  selector:
    app: api-notes
    version: blue
  ports:
    - name: http
      port: 80
      targetPort: 5001
  type: ClusterIP
---
# Green Service (Direct access to Green environment for testing)
apiVersion: v1
kind: Service
metadata:
  name: api-notes-green
  namespace: api-notes
  labels:
    traffic: green
spec:
  selector:
    app: api-notes
    version: green
  ports:
    - name: http
      port: 80
      targetPort: 5001
  type: ClusterIP
